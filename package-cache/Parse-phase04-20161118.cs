'From Pharo4.0 of 18 March 2013 [Latest update: #40626] on 19 November 2016 at 3:06:47.975194 pm'!!PLC_EditorPOU methodsFor: 'commands' stamp: 'CarlosLombardi 11/19/2016 15:04'!downloadProgram 	self doIfPouCanBeCompiled: [ IDE4PLC downloadProgram ] .! !!PLC_EditorPOU methodsFor: 'commands' stamp: 'CarlosLombardi 11/19/2016 14:57'!generateCBuildDownloadProgram 	self doIfPouCanBeCompiled: [ IDE4PLC generateCBuildDownloadProgram ] .! !!PLC_EditorPOU methodsFor: 'commands' stamp: 'CarlosLombardi 11/19/2016 15:04'!doIfPouCanBeCompiled: aBlock	"evaluate the given block if the pou I am editing can be compiled.	 Otherwise, do nothing"	self pou canBeCompiled ifFalse: [ 		GrowlMorph openWithLabel: 'Error' contents: 'El programa tiene errores.'.				^self .	] .	^aBlock value .! !!PLC_EditorPOU methodsFor: 'commands' stamp: 'CarlosLombardi 11/19/2016 14:56'!generateProgramCCode 	self doIfPouCanBeCompiled: [ IDE4PLC generateProgramCCode ] .! !!PLC_EditorPOU methodsFor: 'commands' stamp: 'CarlosLombardi 11/19/2016 15:04'!buildCProgram	self doIfPouCanBeCompiled: [ IDE4PLC buildCProgram ] .	! !!PLC_LadderBody methodsFor: 'program structure' stamp: 'CarlosLombardi 11/19/2016 14:25'!argumentAccessors	"a collection with all the argument accessors (i.e. argument readers or writers) 	 included in this program body"	^self programElements select: [ :elem | 		elem isActualArgumentReader | elem isActualArgumentWriter 	] .! !!PLC_LadderBody methodsFor: 'program structure' stamp: 'CarlosLombardi 11/19/2016 14:25'!programElements	"a collection with all the program elements that this body includes"	^self networks 		inject: Set new		into: [ :set :network | set union: ((network blocks collect: #element) asSet) ] .! !!PLC_LadderBody methodsFor: 'test' stamp: 'CarlosLombardi 11/19/2016 14:43'!canBeCompiled	"whether I can be successfully compiled, i.e. whether I do not have any errors"	"2016.11.19 - at the moment, the only checked errors are wrong values 	              attached to argument accessors"	^(self argumentAccessors select: [:arg | arg actualArgument isError]) isEmpty.! !!PLC_Program methodsFor: 'testing' stamp: 'CarlosLombardi 11/19/2016 14:48'!canBeCompiled	"whether I can be successfully compiled, i.e. whether I do not have any errors"		"2016.11.19 - at the moment, only errors in my body are considered"	^self pouBody canBeCompiled ! !!PLC_Program reorganize!(#'initialize-release' initialize)(#testing canBeCompiled)(#'POU type' pouType pouTypeAcronym)(#'variable declarations' tempVarDecls)(#compilation cCompile ilCompile)!!PLC_LadderBody reorganize!(#'program structure' argumentAccessors programElements)(#'called POUs' addCalledPOUsIn:)(#compilation generateCodeIn:)(#'add-remove Networks' addNetwork)(#test canBeCompiled language)!PLC_EditorPOU removeSelector: #generateBuildDownloadCProgram!